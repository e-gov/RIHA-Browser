openapi: 3.0.1
info:
  title: RIHA API
  description: API description generated by springdoc-openapi plugin
servers:
- url: https://www.riha.ee
  description: Generated server url
paths:
  /api/v1/dashboard/issues/org:
    get:
      operationId: listUserActiveOrganizationRelatedIssues
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CompositeFilterRequest'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseDashboardIssue'
  /api/v1/dashboard/issues/my:
    get:
      operationId: listUserRelatedIssues
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CompositeFilterRequest'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseDashboardIssue'
  /api/v1/environment/classifiers:
    get:
      operationId: classifiers
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/environment/organization:
    put:
      operationId: changeActiveOrganization
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/environment:
    get:
      operationId: environment
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/systems/{reference}/files/{uuid}:
    get:
      operationId: download
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/systems/files:
    get:
      operationId: list
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CompositeFilterRequest'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseFileResource'
  /api/v1/systems/{reference}/files:
    post:
      operationId: upload
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/systems/data-objects:
    get:
      operationId: listDataObjects
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Filterable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/systems/{reference}/create-standard-realisation-system:
    post:
      operationId: createStandardInformationSystem
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StandardRealisationCreationModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InfoSystemModel'
  /api/v1/systems/autocomplete:
    get:
      operationId: autocomplete
      parameters:
      - name: searchTerm
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/systems/{reference}:
    get:
      operationId: get
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InfoSystemModel'
    put:
      operationId: update
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InfoSystemModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InfoSystemModel'
  /api/v1/systems:
    get:
      operationId: list_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Filterable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
    post:
      operationId: create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InfoSystemModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InfoSystemModel'
  /api/v1/issues/{issueId}/comments:
    get:
      operationId: listIssueComments
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Filterable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseIssueComment'
    post:
      operationId: createIssueComment
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IssueCommentModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IssueComment'
  /api/v1/issues/{issueId}/comments/{commentId}:
    get:
      operationId: getIssueComment
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IssueComment'
  /api/v1/systems/{reference}/issues:
    get:
      operationId: listInfoSystemIssues
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Filterable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseIssueSummaryModel'
    post:
      operationId: createInfoSystemIssue
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Issue'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Issue'
  /api/v1/issues:
    get:
      operationId: listIssues
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Filterable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseRihaIssueSummary'
  /api/v1/issues/{issueId}/decisions:
    post:
      operationId: makeApprovalDecision
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IssueApprovalDecisionModel'
      responses:
        200:
          description: default response
  /api/v1/organizations/{organizationCode}/systems/issues:
    get:
      operationId: listOrganizationSystemsIssues
      parameters:
      - name: organizationCode
        in: path
        required: true
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CompositeFilterRequest'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseDashboardIssue'
  /api/v1/issues/{issueId}:
    get:
      operationId: getInfoSystemIssue
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Issue'
    put:
      operationId: updateStatus
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IssueStatusUpdateModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Issue'
  /api/v1/issues/{issueId}/timeline:
    get:
      operationId: getTimeline
      parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseIssueEntity'
  /api/v1/my/organization/users:
    get:
      operationId: listOrganizationUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: filterRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CompositeFilterRequest'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponseUserDetailsModel'
  /api/v1/systems/{reference}/relations:
    get:
      operationId: list_2
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationSummaryModel'
    post:
      operationId: add
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RelationModel'
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RelationSummaryModel'
  /api/v1/systems/{reference}/relations/{relationId}:
    delete:
      operationId: delete
      parameters:
      - name: reference
        in: path
        required: true
        schema:
          type: string
      - name: relationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: default response
  /api/v1/user/organization:
    put:
      operationId: changeActiveOrganization_1
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /api/v1/user:
    get:
      operationId: getUserDetails
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDetailsModel'
components:
  schemas:
    Pageable:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
    CompositeFilterRequest:
      type: object
      properties:
        filterParameters:
          type: array
          items:
            type: string
        sortParameters:
          type: array
          items:
            type: string
    DashboardIssue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - ESTABLISHMENT_REQUEST
          - TAKE_INTO_USE_REQUEST
          - MODIFICATION_REQUEST
          - FINALIZATION_REQUEST
          - AUTOMATICALLY_REGISTERED
        title:
          type: string
        infoSystemFullName:
          type: string
        infoSystemShortName:
          type: string
        authorName:
          type: string
        organizationName:
          type: string
        lastComment:
          $ref: '#/components/schemas/DashboardIssueComment'
    DashboardIssueComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        authorName:
          type: string
        organizationName:
          type: string
        organizationCode:
          type: string
    PagedResponseDashboardIssue:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/DashboardIssue'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    FileResource:
      type: object
      properties:
        fileResourceUuid:
          type: string
          format: uuid
        infoSystemShortName:
          type: string
        infoSystemOwnerCode:
          type: string
        infoSystemOwnerName:
          type: string
        infoSystemUuid:
          type: string
          format: uuid
        fileResourceName:
          type: string
        infoSystemName:
          type: string
    PagedResponseFileResource:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    Filterable:
      type: object
      properties:
        filter:
          type: string
        fields:
          type: string
        sort:
          type: string
    StandardRealisationCreationModel:
      type: object
      properties:
        shortName:
          type: string
        name:
          type: string
        differences:
          type: string
        purpose:
          type: string
    InfoSystemModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastPositiveApprovalRequestType:
          type: string
          enum:
          - ESTABLISHMENT_REQUEST
          - TAKE_INTO_USE_REQUEST
          - MODIFICATION_REQUEST
          - FINALIZATION_REQUEST
          - AUTOMATICALLY_REGISTERED
        lastPositiveApprovalRequestDate:
          type: string
          format: date-time
        lastPositiveEstablishmentRequestDate:
          type: string
          format: date-time
        lastPositiveTakeIntoUseRequestDate:
          type: string
          format: date-time
        lastPositiveFinalizationRequestDate:
          type: string
          format: date-time
        hasUsedSystemTypeRelations:
          type: boolean
        details:
          $ref: '#/components/schemas/JsonNode'
    JsonNode:
      type: object
      properties:
        valueNode:
          type: boolean
        missingNode:
          type: boolean
        object:
          type: boolean
        pojo:
          type: boolean
        integralNumber:
          type: boolean
        short:
          type: boolean
        int:
          type: boolean
        long:
          type: boolean
        double:
          type: boolean
        bigDecimal:
          type: boolean
        bigInteger:
          type: boolean
        textual:
          type: boolean
        boolean:
          type: boolean
        binary:
          type: boolean
        containerNode:
          type: boolean
        floatingPointNumber:
          type: boolean
        number:
          type: boolean
        nodeType:
          type: string
          enum:
          - ARRAY
          - BINARY
          - BOOLEAN
          - MISSING
          - NULL
          - NUMBER
          - OBJECT
          - POJO
          - STRING
        array:
          type: boolean
        null:
          type: boolean
        float:
          type: boolean
    IssueComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        issueId:
          type: integer
          format: int64
        comment:
          type: string
        dateCreated:
          type: string
          format: date-time
        authorName:
          type: string
        authorPersonalCode:
          type: string
        organizationName:
          type: string
        organizationCode:
          type: string
        entityType:
          type: string
          enum:
          - ISSUE
          - ISSUE_COMMENT
          - ISSUE_EVENT
    PagedResponseIssueComment:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/IssueComment'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    IssueCommentModel:
      type: object
      properties:
        comment:
          type: string
    IssueSummaryModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        infoSystemUuid:
          type: string
          format: uuid
        dateCreated:
          type: string
          format: date-time
        title:
          type: string
        organizationName:
          type: string
        organizationCode:
          type: string
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
        type:
          type: string
          enum:
          - ESTABLISHMENT_REQUEST
          - TAKE_INTO_USE_REQUEST
          - MODIFICATION_REQUEST
          - FINALIZATION_REQUEST
          - AUTOMATICALLY_REGISTERED
        resolutionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
    PagedResponseIssueSummaryModel:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/IssueSummaryModel'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    IssueEventSummaryModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - CLOSED
          - DECISION
        organizationName:
          type: string
        organizationCode:
          type: string
        resolutionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
        dateCreated:
          type: string
          format: date-time
    PagedResponseRihaIssueSummary:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/RihaIssueSummary'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    RihaIssueSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        infoSystemShortName:
          type: string
        dateCreated:
          type: string
          format: date-time
        title:
          type: string
        issueType:
          type: string
          enum:
          - ESTABLISHMENT_REQUEST
          - TAKE_INTO_USE_REQUEST
          - MODIFICATION_REQUEST
          - FINALIZATION_REQUEST
          - AUTOMATICALLY_REGISTERED
        organizationName:
          type: string
        organizationCode:
          type: string
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
        infoSystemFullName:
          type: string
        resolutionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
        events:
          type: array
          items:
            $ref: '#/components/schemas/IssueEventSummaryModel'
        decisionDeadline:
          type: string
          format: date
    Issue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        infoSystemUuid:
          type: string
          format: uuid
        dateCreated:
          type: string
          format: date-time
        title:
          type: string
        comment:
          type: string
        authorName:
          type: string
        authorPersonalCode:
          type: string
        organizationName:
          type: string
        organizationCode:
          type: string
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
        type:
          type: string
          enum:
          - ESTABLISHMENT_REQUEST
          - TAKE_INTO_USE_REQUEST
          - MODIFICATION_REQUEST
          - FINALIZATION_REQUEST
          - AUTOMATICALLY_REGISTERED
        resolutionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
        decisionDeadline:
          type: string
          format: date
        entityType:
          type: string
          enum:
          - ISSUE
          - ISSUE_COMMENT
          - ISSUE_EVENT
    IssueApprovalDecisionModel:
      type: object
      properties:
        comment:
          type: string
        decisionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
    IssueStatusUpdateModel:
      type: object
      properties:
        comment:
          type: string
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
        resolutionType:
          type: string
          enum:
          - POSITIVE
          - NEGATIVE
          - DISMISSED
    IssueEntity:
      type: object
      properties:
        entityType:
          type: string
          enum:
          - ISSUE
          - ISSUE_COMMENT
          - ISSUE_EVENT
    PagedResponseIssueEntity:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/IssueEntity'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    OrganizationModel:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    PagedResponseUserDetailsModel:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserDetailsModel'
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    UserDetailsModel:
      type: object
      properties:
        personalCode:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        approver:
          type: boolean
        producer:
          type: boolean
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationModel'
        activeOrganization:
          $ref: '#/components/schemas/OrganizationModel'
        roles:
          type: array
          items:
            type: string
    RelationModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        infoSystemShortName:
          type: string
        type:
          type: string
          enum:
          - SUB_SYSTEM
          - SUPER_SYSTEM
          - USED_SYSTEM
          - USER_SYSTEM
    RelationSummaryModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        infoSystemUuid:
          type: string
          format: uuid
        infoSystemName:
          type: string
        infoSystemShortName:
          type: string
        type:
          type: string
          enum:
          - SUB_SYSTEM
          - SUPER_SYSTEM
          - USED_SYSTEM
          - USER_SYSTEM
